version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/8.2/Dockerfile
      args:
        WWWGROUP: '${WWWGROUP:-1000}'
    image: laravel11-app
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www/html
    ports:
      - '${APP_PORT:-80}:80'
      - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
    environment:
      WWWUSER: '${WWWUSER:-1000}'
      LARAVEL_SAIL: 1
      XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
      XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
    volumes:
      - .:/var/www/html
    networks:
      - laravel
    depends_on:
      mysql:
        condition: service_healthy
    command: >
      sh -c "php artisan key:generate && npm install && php artisan serve --host=0.0.0.0 --port=80 & npm run dev"

  mysql:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - laravel
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-p${MYSQL_ROOT_PASSWORD}']
      interval: 10s
      timeout: 5s
      retries: 5

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped
    ports:
      - '8080:80'
    environment:
      PMA_HOST: mysql_db
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - laravel

networks:
  laravel:
    driver: bridge

volumes:
  mysql-data:
    driver: local
